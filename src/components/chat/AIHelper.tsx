import { useState, useRef, useEffect } from 'react';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import Icon from '@/components/ui/icon';
import { Badge } from '@/components/ui/badge';

interface Message {
  id: string;
  text: string;
  isUser: boolean;
  timestamp: Date;
}

interface AIHelperProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
}

const HELP_TOPICS = [
  {
    id: 'organization',
    title: '–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é?',
    answer: '–ù–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ –≤—ã —É–≤–∏–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π. –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –µ—ë. –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –æ—Ç–∫—Ä–æ—é—Ç—Å—è –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å —ç—Ç–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π.'
  },
  {
    id: 'leads',
    title: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ª–∏–¥–∞–º–∏?',
    answer: '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–†–∞–±–æ—Ç–∞" –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ. –¢–∞–º –≤—ã —É–≤–∏–¥–∏—Ç–µ –¥–≤–∞ –±–ª–æ–∫–∞:\n\n1Ô∏è‚É£ –ë–ª–æ–∫–Ω–æ—Ç - –∑–¥–µ—Å—å –≤—ã –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–µ–Ω—Ç–µ.\n\n2Ô∏è‚É£ –ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–º —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–æ–º.\n\nüìù –ü–õ–ê–ù –†–ê–ë–û–¢–´:\n\n1. –ü–ï–†–ï–î –ø–æ–¥—Ö–æ–¥–æ–º –∫ –∫–ª–∏–µ–Ω—Ç—É –Ω–∞–∂–º–∏—Ç–µ –∑–≤–µ–∑–¥–æ—á–∫—É –≤ "–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞" (–∑–≤–µ–∑–¥–æ—á–∫–∞ –Ω–∞—á–Ω—ë—Ç –∫—Ä—É—Ç–∏—Ç—å—Å—è)\n\n2. –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ\n\n3. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –°–û–ì–õ–ê–°–ò–õ–°–Ø:\n   ‚Ä¢ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –±–ª–æ–∫–Ω–æ—Ç–µ\n   ‚Ä¢ –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç –æ–∑–≤—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ, –Ω–∞–∂–º–∏—Ç–µ –∑–≤–µ–∑–¥–æ—á–∫—É –µ—â—ë —Ä–∞–∑ (–æ–Ω–∞ —Å—Ç–∞–Ω–µ—Ç –∂—ë–ª—Ç–æ–π)\n   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram"\n\n4. –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –ù–ï –°–û–ì–õ–ê–°–ò–õ–°–Ø:\n   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –∑–≤–µ–∑–¥–æ—á–∫—É –µ—â—ë —Ä–∞–∑ (–æ–Ω–∞ —Å—Ç–∞–Ω–µ—Ç –∂—ë–ª—Ç–æ–π)\n   ‚Ä¢ –ü–µ—Ä–µ–¥ –ø–æ–¥—Ö–æ–¥–æ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∫–ª–∏–µ–Ω—Ç—É –Ω–∞–∂–º–∏—Ç–µ –µ—ë —Å–Ω–æ–≤–∞ (–∑–≤–µ–∑–¥–æ—á–∫–∞ —Å–Ω–æ–≤–∞ –∫—Ä—É—Ç–∏—Ç—Å—è)'
  },
  {
    id: 'schedule',
    title: '–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã?',
    answer: '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ì—Ä–∞—Ñ–∏–∫" –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞. –í—ã —É–≤–∏–¥–∏—Ç–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å –≤–∞—à–∏–º–∏ —Å–º–µ–Ω–∞–º–∏ –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º–∏ –¥–Ω—è–º–∏.\n\nüìÖ –ü—Ä–æ–º–æ—É—Ç–µ—Ä —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–º–µ–Ω—ã –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é.\n\nüìç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—Ç–µ —Ä–∞–±–æ—Ç—ã (—Ç–æ—á–∫–µ) –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –≥—Ä–∞—Ñ–∏–∫–µ. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ—á–∫–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤–µ—á–µ—Ä–æ–º –∑–∞ –¥–µ–Ω—å –¥–æ —Å–º–µ–Ω—ã.\n\n‚ö†Ô∏è –í–ê–ñ–ù–û: –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ —Å–º–µ–Ω—ã –ù–ï –ø–æ–¥–ª–µ–∂–∞—Ç –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–µ!\n\nüí∞ –®—Ç—Ä–∞—Ñ—ã –∑–∞ –Ω–µ–≤—ã—Ö–æ–¥:\n‚Ä¢ –ü–µ—Ä–≤—ã–π –Ω–µ–≤—ã—Ö–æ–¥ –Ω–∞ —Å–º–µ–Ω—É ‚Üí —à—Ç—Ä–∞—Ñ 3000 —Ä—É–±–ª–µ–π\n‚Ä¢ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –Ω–µ–≤—ã—Ö–æ–¥ ‚Üí —É–≤–æ–ª—å–Ω–µ–Ω–∏–µ'
  },
  {
    id: 'chat',
    title: '–ö–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç?',
    answer: '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ß–∞—Ç" –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É. –û—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–Ω–æ —á–∞—Ç–∞ —Å –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞–∂–º–∏—Ç–µ Enter –∏–ª–∏ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏. –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –∫–Ω–æ–ø–∫–µ "–ß–∞—Ç" –±—É–¥–µ—Ç –∫—Ä–∞—Å–Ω—ã–π –∑–Ω–∞—á–æ–∫ —Å –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º.'
  },
  {
    id: 'training',
    title: '–ì–¥–µ –Ω–∞–π—Ç–∏ –æ–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã?',
    answer: '–ù–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ –µ—Å—Ç—å –ø–ª–∏—Ç–∫–∞ "–û–±—É—á–µ–Ω–∏–µ". –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ—ë, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –æ–±—É—á–∞—é—â–∏—Ö –≤–∏–¥–µ–æ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. –í—ã –º–æ–∂–µ—Ç–µ —Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –ø—Ä—è–º–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.'
  },
  {
    id: 'change-org',
    title: '–ö–∞–∫ —Å–º–µ–Ω–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é?',
    answer: 'üîÑ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–º–µ–Ω–∏—Ç—å" –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞. –í—ã –≤–µ—Ä–Ω—ë—Ç–µ—Å—å –∫ —Å–ø–∏—Å–∫—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –∏ —Å–º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é.'
  }
];

export default function AIHelper({ open, onOpenChange }: AIHelperProps) {
  const [showWelcome, setShowWelcome] = useState(true);
  const [messages, setMessages] = useState<Message[]>([
    {
      id: '1',
      text: '–ü—Ä–∏–≤–µ—Ç! –Ø AI-–ø–æ–º–æ—â–Ω–∏–∫ IMPERIA PROMO. –ó–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ —Ä–∞–±–æ—Ç–µ —Å —Å–∞–π—Ç–æ–º, –∏ —è –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è! üòä',
      isUser: false,
      timestamp: new Date()
    }
  ]);
  const [input, setInput] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const findAnswer = (question: string): string => {
    const lowerQuestion = question.toLowerCase();
    
    const restrictedKeywords = [
      '–∞–¥–º–∏–Ω', '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', '–±—É—Ö', '–±—É—Ö–≥–∞–ª—Ç–µ—Ä', '—É—á–µ—Ç', '–∑–∞—Ä–ø–ª–∞—Ç', 
      '–ø—Ä–æ–º–æ—É—Ç–µ—Ä', '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ', '—Å–∫–æ–ª—å–∫–æ', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫', '–¥–∞–Ω–Ω—ã–µ',
      '–ø—Ä–∏–±—ã–ª', '–¥–æ—Ö–æ–¥', '—Ä–∞—Å—Ö–æ–¥', '–∫–º—Å', '–∫–≤–≤', '–Ω–∞–ª–æ–≥', '—Å–º–µ–Ω—ã',
      '–±–∞–∑–∞', '–¥–∞–Ω–Ω—ã—Ö', '–ø–∞—Ä–æ–ª—å', '–¥–æ—Å—Ç—É–ø'
    ];
    
    const hasRestrictedContent = restrictedKeywords.some(keyword => 
      lowerQuestion.includes(keyword)
    );
    
    if (hasRestrictedContent) {
      return '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–º–æ—â–Ω–∏–∫ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –ø–∞–Ω–µ–ª—å—é. –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —á–µ—Ä–µ–∑ —á–∞—Ç. üîí';
    }
    
    if (lowerQuestion.includes('–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü') || lowerQuestion.includes('–≤—ã–±—Ä–∞—Ç—å')) {
      return HELP_TOPICS[0].answer;
    }
    if (lowerQuestion.includes('–ª–∏–¥') || lowerQuestion.includes('–∫–æ–Ω—Ç–∞–∫—Ç')) {
      return HELP_TOPICS[1].answer;
    }
    if (lowerQuestion.includes('–≥—Ä–∞—Ñ–∏–∫')) {
      return HELP_TOPICS[2].answer;
    }
    if (lowerQuestion.includes('—á–∞—Ç') || lowerQuestion.includes('—Å–æ–æ–±—â–µ–Ω')) {
      return HELP_TOPICS[3].answer;
    }
    if (lowerQuestion.includes('–æ–±—É—á–µ–Ω') || lowerQuestion.includes('–≤–∏–¥–µ–æ') || lowerQuestion.includes('–º–∞—Ç–µ—Ä–∏–∞–ª')) {
      return HELP_TOPICS[4].answer;
    }
    if (lowerQuestion.includes('—Å–º–µ–Ω') && lowerQuestion.includes('–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü')) {
      return HELP_TOPICS[5].answer;
    }
    
    return '–Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Å —Ç–∞–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏:\n\n' +
           '‚Ä¢ –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é\n' +
           '‚Ä¢ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ª–∏–¥–∞–º–∏\n' +
           '‚Ä¢ –ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥—Ä–∞—Ñ–∏–∫\n' +
           '‚Ä¢ –ö–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç\n' +
           '‚Ä¢ –ì–¥–µ –Ω–∞–π—Ç–∏ –æ–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n' +
           '‚Ä¢ –ö–∞–∫ —Å–º–µ–Ω–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é\n\n' +
           '–ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ–¥—Ä–æ–±–Ω–µ–µ, –∏ —è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–º–æ–≥—É! üòä';
  };

  const handleSend = () => {
    if (!input.trim()) return;

    setShowWelcome(false);
    const userMessage: Message = {
      id: Date.now().toString(),
      text: input,
      isUser: true,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInput('');
    setIsTyping(true);

    setTimeout(() => {
      const answer = findAnswer(input);
      const aiMessage: Message = {
        id: (Date.now() + 1).toString(),
        text: answer,
        isUser: false,
        timestamp: new Date()
      };
      setMessages(prev => [...prev, aiMessage]);
      setIsTyping(false);
    }, 1000);
  };

  const handleTopicClick = (topic: typeof HELP_TOPICS[0]) => {
    setShowWelcome(false);
    const userMessage: Message = {
      id: Date.now().toString(),
      text: topic.title,
      isUser: true,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setIsTyping(true);

    setTimeout(() => {
      const aiMessage: Message = {
        id: (Date.now() + 1).toString(),
        text: topic.answer,
        isUser: false,
        timestamp: new Date()
      };
      setMessages(prev => [...prev, aiMessage]);
      setIsTyping(false);
    }, 800);
  };

  const handleResetChat = () => {
    setShowWelcome(true);
    setMessages([
      {
        id: '1',
        text: '–ü—Ä–∏–≤–µ—Ç! –Ø AI-–ø–æ–º–æ—â–Ω–∏–∫ IMPERIA PROMO. –ó–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ —Ä–∞–±–æ—Ç–µ —Å —Å–∞–π—Ç–æ–º, –∏ —è –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è! üòä',
        isUser: false,
        timestamp: new Date()
      }
    ]);
    setInput('');
  };

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-[600px] h-[80vh] flex flex-col p-0">
        <DialogHeader className="px-6 py-4 border-b bg-gradient-to-r from-[#001f54] to-[#002b6b]">
          <div className="flex items-center justify-between">
            <DialogTitle className="flex items-center gap-2 text-white">
              <Icon name="Bot" size={24} />
              AI-–ü–æ–º–æ—â–Ω–∏–∫
            </DialogTitle>
            <div className="flex items-center gap-2">
              {!showWelcome && (
                <Button
                  onClick={handleResetChat}
                  variant="ghost"
                  size="sm"
                  className="text-white hover:bg-white/10"
                >
                  <Icon name="ArrowLeft" size={20} />
                </Button>
              )}
              <Button
                onClick={() => onOpenChange(false)}
                variant="ghost"
                size="sm"
                className="text-white hover:bg-white/10"
              >
                <Icon name="X" size={20} />
              </Button>
            </div>
          </div>
        </DialogHeader>

        <div className="flex-1 overflow-y-auto p-4 space-y-4">
          {showWelcome && (
            <div className="grid grid-cols-1 gap-2 mb-4">
              {HELP_TOPICS.map(topic => (
                <Button
                  key={topic.id}
                  onClick={() => handleTopicClick(topic)}
                  variant="outline"
                  className="h-auto py-3 px-4 text-left justify-start hover:bg-blue-50 transition-colors"
                >
                  <Icon name="HelpCircle" size={16} className="mr-2 text-blue-600 flex-shrink-0" />
                  <span className="text-sm">{topic.title}</span>
                </Button>
              ))}
            </div>
          )}

          {messages.map(message => (
            <div
              key={message.id}
              className={`flex ${message.isUser ? 'justify-end' : 'justify-start'}`}
            >
              <div
                className={`max-w-[80%] rounded-2xl px-4 py-3 ${
                  message.isUser
                    ? 'bg-[#001f54] text-white'
                    : 'bg-gray-100 text-gray-800'
                }`}
              >
                <p className="text-sm whitespace-pre-line">{message.text}</p>
                <p className={`text-xs mt-1 ${message.isUser ? 'text-blue-200' : 'text-gray-500'}`}>
                  {message.timestamp.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })}
                </p>
              </div>
            </div>
          ))}

          {isTyping && (
            <div className="flex justify-start">
              <div className="bg-gray-100 rounded-2xl px-4 py-3">
                <div className="flex gap-1">
                  <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0ms' }}></div>
                  <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '150ms' }}></div>
                  <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '300ms' }}></div>
                </div>
              </div>
            </div>
          )}

          <div ref={messagesEndRef} />
        </div>

        <div className="p-4 border-t bg-gray-50">
          <div className="flex gap-2">
            <Textarea
              value={input}
              onChange={(e) => setInput(e.target.value)}
              onKeyDown={(e) => {
                if (e.key === 'Enter' && !e.shiftKey) {
                  e.preventDefault();
                  handleSend();
                }
              }}
              placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å..."
              className="resize-none min-h-[60px]"
            />
            <Button
              onClick={handleSend}
              disabled={!input.trim()}
              className="bg-[#001f54] hover:bg-[#002b6b] text-white h-[60px] px-6"
            >
              <Icon name="Send" size={20} />
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
}